name: Deployment Pipeline

# Controls when the workflow will run
on:
  push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  getProcessInfo:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    outputs:
      output1: ${{ steps.setProcessInfo.outputs.componentID }}
      output2: ${{ steps.setProcessInfo.outputs.environmentID }}
      output3: ${{ steps.setProcessInfo.outputs.packageVersion }}
      output4: ${{ steps.setProcessInfo.outputs.componentID_Array }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Get Process Info
        uses: actions/checkout@v2
      - id: setProcessInfo
        run: |
            ProcessDetails=$(cat ./ProcessInfo/ProcessDetails.json)
            packageVersion=$(echo  ${ProcessDetails} | jq '.[] | .packageVersion')
            echo $packageVersion
            componentID=$(echo  ${ProcessDetails} | jq '.[] | .processDetails[].componentID')
            environmentID=$(echo  ${ProcessDetails} | jq '.[] | .processDetails[0].environmentID')
            echo "::set-output name=componentID::$componentID"
            echo "::set-output name=environmentID::$environmentID"
            echo "::set-output name=packageVersion::$packageVersion"
            componentIdsArray=($(echo [$componentID]))
            componentIds=($(
                  for i in ${componentIdsArray[@]}
                  do
                    echo -ne "$i,"
                  done
                  ) )
                  componentIds=${componentIds:0:-1}
                  echo ${componentIds//,/,}
            echo $componentIds
            echo "::set-output name=componentID_Array ::{"packageVersion": "v1.18","processDetails": [{"processName": "TestWS","componentID": "bb076cd7-8f1e-42a7-843c-3b9c5dda0bb5","environmentID": "5d9c830c-1f65-4fed-b7ef-fdbbbaf7d259"}]}"               
  createPackage:
   strategy:
    matrix:
        componentIds: ${{needs.getProcessInfo.outputs.output4}}
   runs-on: ubuntu-latest

   needs: getProcessInfo
   steps:
     - name: test
       run: |
             echo ${{matrix.componentIds}} 
             echo ${{needs.getProcessInfo.outputs.output4}}
         
       
     
            
        
  
