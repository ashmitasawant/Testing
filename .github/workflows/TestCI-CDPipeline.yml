name: Deployment Pipeline

# Controls when the workflow will run
on:
  push:
    paths:
     - 'ProcessInfo/ProcessDetails.json' 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  getProcessInfo:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    outputs:
      output1: ${{ steps.setProcessInfo.outputs.componentID }}
      output2: ${{ steps.setProcessInfo.outputs.environmentID }}
      output3: ${{ steps.setProcessInfo.outputs.packageVersion }}
      output4: ${{ steps.setProcessInfo.outputs.componentID_Array }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Get Process Info
        uses: actions/checkout@v2
      - id: setProcessInfo
        run: |
            ProcessDetails=$(cat ./ProcessInfo/ProcessDetails.json)
            packageVersion=$(echo  ${ProcessDetails} | jq '.[] | .packageVersion')
            componentID=$(echo  ${ProcessDetails} | jq '.[0] | .processDetails[].componentID')
            environmentID=$(echo  ${ProcessDetails} | jq '.[] | .processDetails[0].environmentID')
            echo "::set-output name=componentID::$componentID"
            echo "::set-output name=environmentID::$environmentID"
            echo "::set-output name=packageVersion::$packageVersion"
            componentIdsArray=$(echo [$componentID])
            echo "::set-output name=componentID_Array::$componentIdsArray"
  
            
  createPackage:
    
    environment: Dev
    env: 
      MY_USERNAME: ${{ secrets.MY_USERNAME }}
      MY_PASSWORD: ${{ secrets.MY_PASSWORD }}
     
    runs-on: ubuntu-latest
    outputs:
      output5: ${{ steps.response.outputs.packageId }}
    needs: getProcessInfo
    steps:
     - name: SetVariables
       id: showVariable
       run:   echo ${{needs.getProcessInfo.outputs.output1}}
              echo ${{needs.getProcessInfo.outputs.output4}}
       
     - name: Package Creation
       id: packageCreation
       
     - run: |
             arr=()
             for i in "${{needs.getProcessInfo.outputs.output4}}"
             do
               uses: fjogeleit/http-request-action@master
               with:
                url: 'https://api.boomi.com/api/rest/v1/trainingashmitasawant-D9P8J7/PackagedComponent'
                method: 'POST'
                contentType: 'application/json'
                customHeaders: '{"accept": "application/json"}'
                data: '{"componentId": ${{needs.getProcessInfo.outputs.output4}},"packageVersion":${{needs.getProcessInfo.outputs.output3}}, "notes":"Package for deployment" }'
                username: ${{env.MY_USERNAME}}
                password: ${{env.MY_PASSWORD}}
             done        
     - name: Show Response
       id: response
       run: |
            packageID=$(echo ${{ toJSON(steps.packageCreation.outputs.response) }} | jq ".packageId")
            echo "::set-output name=packageId::$packageID"
            
        
  
